monoisotopic_table = {
    'A': 71.03711,
    'C': 103.00919,
    'D': 115.02694,
    'E': 129.04259,
    'F': 147.06841,
    'G': 57.02146,
    'H': 137.05891,
    'I': 113.08406,
    'K': 128.09496,
    'L': 113.08406,
    'M': 131.04049,
    'N': 114.04293,
    'P': 97.05276,
    'Q': 128.05858,
    'R': 156.10111,
    'S': 87.03203,
    'T': 101.04768,
    'V': 99.06841,
    'W': 186.07931,
    'Y': 163.06333
}

def parse_fasta(fasta_string): #adapted from previous function that considered multiple entries
    sequence="" #initialize empty string to store sequence
    for line in fasta_string.strip().splitlines(): #strip() removes whitespace from the edges of the string, splitlines() splits the strings into lines (iterable)
        if line.startswith(">"): 
            pass 
        else:
            sequence += line.strip()  #adds each sequence line directly next to the previous one
    return sequence

def protein_weight2(protein):
    return sum(monoisotopic_table[aa] for aa in protein)
#or
def protein_weight(protein):
    weight = 0 #not distinguishing between residues and non-residues
    for aa in protein:
        weight += monoisotopic_table[aa]
    return weight
    
#example

with open(r'\rosalind_prtm.txt', 'r') as arquive:
    fasta_string = arquive.read()

protein_weight2(protein=parse_fasta(fasta_string))
